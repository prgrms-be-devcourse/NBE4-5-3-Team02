spring:
  profiles:
    active: dev
    include: secret

  datasource:
    url: jdbc:mysql://toolgether-mysql:3306/toolgether
    username: ON_SECRET
    password: ON_SECRET

  data:
    redis:
      host: toolgether-redis
      port: 6379

  jackson:
    serialization:
      fail-on-empty-beans: false

  output:
    ansi:
      enabled: always

  jpa:
    database: mysql
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        default_batch_fetch_size: 100
    open-in-view: false

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ON_SECRET
            client-secret: ON_SECRET
            redirect-uri: ${custom.dev.backUrl}/login/oauth2/code/google
            scope:
              - openid
              - https://www.googleapis.com/auth/userinfo.profile
              - https://www.googleapis.com/auth/userinfo.email
            client-authentication-method: client_secret_post
        provider:
          google:
            issuer-uri: https://accounts.google.com

  mail:
    username: ON_SECRET
    password: ON_SECRET
    host: smtp.gmail.com
    port: 587
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

cloud:
  aws:
    credentials:
      access-key: ON_SECRET
      secret-key: ON_SECRET
    region:
      static: ap-northeast-2
    s3:
      bucket: toolgetherbucket

springdoc:
  default-produces-media-type: application/json;charset=UTF-8

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE

custom:
  dev:
    domain:
    backUrl:
  site:
    frontUrl:

websocket:
  endpoint:
    uri: ws://"${custom.dev.backUrl}"/chat